import Head from "next/head";
import TableButton from "../../toy/TableButton";
import Modal from "react-modal";
import { useEffect, useState } from "react";
import styles from "./pos.module.css";
import Cookies from "js-cookie";
import { numberWithCommas } from "../../library/functions";

type table = [adult: number, elementary: number, child: number, soju: number, beer: number, softdrink: number, soup: number, noodle: number];

const menu: table = [28900, 19000, 9000, 5000, 5000, 2000, 5000, 5000];
//     person:28900,
//     soju:5000,
//     beer:5000,
//     softdrink:2000,
//     soup:5000,
//     noodle:5000
// }

interface cookie {
  cookie: table[];
}

function calculateTotal(tb: table) {
  let total = 0;
  tb.forEach((value, index, arr) => {
    total += value * menu[index];
  });

  return total;
}

export default function Home() {
  const [isOpenModal, setIsOpenModal] = useState(false);

  const [tableOne, setTableOne] = useState(null);
  const [tableTwo, setTableTwo] = useState(null);
  const [tableThree, setTableThree] = useState(null);
  const [tableFour, setTableFour] = useState(null);
  const [tableFive, setTableFive] = useState(null);
  const [tableSix, setTableSix] = useState(null);
  const [tableSeven, setTableSeven] = useState(null);
  const [tableEIght, setTableEight] = useState(null);

  const [currentTable, setCurrentTable] = useState(0);

  const [adult, setAdult] = useState(0);
  const [elementary, setElementary] = useState(0);
  const [child, setChild] = useState(0);
  const [soju, setSoju] = useState(0);
  const [beer, setBeer] = useState(0);
  const [softdrink, setSoftdrink] = useState(0);
  const [soup, setSoup] = useState(0);
  const [noodle, setNoodle] = useState(0);

  function setOrders(tb: table) {
    tb.forEach((value, idx) => {
      order_arrays[idx](value);
    });
  }

  const arrays: Function[] = [setTableOne, setTableTwo, setTableThree, setTableFour, setTableFive, setTableSix, setTableSeven, setTableEight];

  const order_arrays: Function[] = [setAdult, setElementary, setChild, setSoju, setBeer, setSoftdrink, setSoup, setNoodle];

  function loadCookie() {
    for (let i = 1; i < 9; i++) {
      const tmp = getTable(i);
      if (tmp) {
        arrays[i - 1](tmp);
      }
    }
  }

  function getTable(num: number) {
    const tmp = Cookies.get(`${num}`);
    if (tmp) return JSON.parse(tmp);
    else return false;
  }

  function deleteTable(num: number) {
    Cookies.remove(`${num}`);
  }

  useEffect(() => {
    loadCookie();
  }, []);

  function openModal(tb: table | null, num: number) {
    setIsOpenModal(true);
    setCurrentTable(num);
    if (tb) setOrders(tb);
  }

  function closeModal() {
    setIsOpenModal(false);
    order_arrays.forEach((val, idx) => {
      val(0);
    });
  }

  function order() {
    const tmp = [adult, elementary, child, soju, beer, softdrink, soup, noodle];
    arrays[currentTable - 1](tmp);
    Cookies.set(`${currentTable}`, JSON.stringify(tmp), { expires: 40 });
    closeModal();
  }

  function clear() {
    if (!confirm("정말 계산하시겠어요?")) {
      return;
    }
    arrays[currentTable - 1](null);

    deleteTable(currentTable);
    //add to total
    closeModal();
  }

  return (
    <>
      <Head>
        <title>왔쏘 청양정 포스 관리 시스템</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <div onClick={() => openModal(tableOne, 1)}>
          <TableButton number={1} price={tableOne ? calculateTotal(tableOne) : 0} />
        </div>
        <div onClick={() => openModal(tableTwo, 2)}>
          <TableButton number={2} price={tableTwo ? calculateTotal(tableTwo) : 0} />
        </div>
        <div onClick={() => openModal(tableThree, 3)}>
          <TableButton number={3} price={tableThree ? calculateTotal(tableThree) : 0} />
        </div>
        <div onClick={() => openModal(tableFour, 4)}>
          <TableButton number={4} price={tableFour ? calculateTotal(tableFour) : 0} />
        </div>
        <div onClick={() => openModal(tableFive, 5)}>
          <TableButton number={5} price={tableFive ? calculateTotal(tableFive) : 0} />
        </div>
        <div onClick={() => openModal(tableSix, 6)}>
          <TableButton number={6} price={tableSix ? calculateTotal(tableSix) : 0} />
        </div>
        <div onClick={() => openModal(tableSeven, 7)}>
          <TableButton number={7} price={tableSeven ? calculateTotal(tableSeven) : 0} />
        </div>
        <div onClick={() => openModal(tableEIght, 8)}>
          <TableButton number={8} price={tableEIght ? calculateTotal(tableEIght) : 0} />
        </div>
      </div>
      <Modal isOpen={isOpenModal} onRequestClose={closeModal} className={styles.Modal} contentLabel="Example Modal" overlayClassName={styles.Overlay} ariaHideApp={false}>
        <div className={styles.ModalContainer}>
          <div style={{ textAlign: "center", color: "black" }}>
            <h3>현재 테이블: {currentTable}</h3>
          </div>
          <div className={styles.menuList}>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setAdult(adult + 1)}>
                성인
              </button>
              <div className={styles.menuNumber} onClick={() => setAdult(adult - 1)}>
                <h2>{adult}</h2>
              </div>
            </div>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setElementary(elementary + 1)}>
                초등
              </button>
              <div className={styles.menuNumber} onClick={() => setElementary(elementary - 1)}>
                <h2>{elementary}</h2>
              </div>
            </div>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setChild(child + 1)}>
                유아
              </button>
              <div className={styles.menuNumber} onClick={() => setChild(child - 1)}>
                <h2>{child}</h2>
              </div>
            </div>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setSoju(soju + 1)}>
                소주
              </button>
              <div className={styles.menuNumber} onClick={() => setSoju(soju - 1)}>
                <h2>{soju}</h2>
              </div>
            </div>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setBeer(beer + 1)}>
                맥주
              </button>
              <div className={styles.menuNumber} onClick={() => setBeer(beer - 1)}>
                <h2>{beer}</h2>
              </div>
            </div>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setSoup(soup + 1)}>
                된장찌개
              </button>
              <div className={styles.menuNumber} onClick={() => setSoup(soup - 1)}>
                <h2>{soup}</h2>
              </div>
            </div>
            <div className={styles.menuContainer}>
              <button className={styles.menuButton} onClick={() => setNoodle(noodle + 1)}>
                막국수
              </button>
              <div className={styles.menuNumber} onClick={() => setNoodle(noodle - 1)}>
                <h2>{noodle}</h2>
              </div>
            </div>
          </div>
          <div className={styles.orderContainer}>
            <button className={styles.orderButton} onClick={order}>
              주문
            </button>
            <div className={styles.finalContainer}>
              <div className={styles.menuNumber}>
                <h3 style={{ color: "black" }}>{numberWithCommas(calculateTotal([adult, elementary, child, soju, beer, softdrink, soup, noodle]))} 원</h3>
              </div>
              <button className={styles.menuButton} onClick={clear}>
                완료
              </button>
            </div>
          </div>
        </div>
      </Modal>
    </>
  );
}
